<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<report name="cpputest">
    <sessioninfo id="" start="0" dump="0"/>
	<method name="BinaryEqualFailure::BinaryEqualFailure(UtestShell *, const char *, signed int, const unsigned char *, const unsigned char *, unsigned int, const SimpleString &amp;)" desc="" line="359" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="363" ms="0" cs="1" mb="1" cb="0"/>
		<line nr="365" ms="1" cs="0" mb="0" cb="1"/>
		<line nr="366" ms="0" cs="0" mb="0" cb="1"/>
		<line nr="368" ms="0" cs="1" mb="0" cb="1"/>
		<line nr="369" ms="0" cs="1" mb="0" cb="1"/>
		<line nr="371" ms="0" cs="1" mb="0" cb="1"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="BitsEqualFailure::BitsEqualFailure(UtestShell *, const char *, signed int, unsigned long, unsigned long, unsigned long, unsigned int, const SimpleString &amp;)" desc="" line="375" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="379" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="381" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_C_LOCATION(signed int, const char *, const char *, signed int)" desc="" line="88" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_BITS_LOCATION(unsigned int, unsigned int, unsigned int, unsigned int, const char *, signed int)" desc="" line="73" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_CHAR_LOCATION(char, char, const char *, signed int)" desc="" line="48" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_INT_LOCATION(signed int, signed int, const char *, signed int)" desc="" line="38" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_POINTER_LOCATION(const void *, const void *, const char *, signed int)" desc="" line="68" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_REAL_LOCATION(double, double, double, const char *, signed int)" desc="" line="43" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="45" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_SBYTE_LOCATION(signed char, signed char, const char *, signed int)" desc="" line="58" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_STRING_LOCATION(const char *, const char *, const char *, signed int)" desc="" line="63" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="65" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CHECK_EQUAL_C_UBYTE_LOCATION(unsigned char, unsigned char, const char *, signed int)" desc="" line="53" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CheckEqualFailure::CheckEqualFailure(UtestShell *, const char *, signed int, const SimpleString &amp;, const SimpleString &amp;, const SimpleString &amp;)" desc="" line="202" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="205" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="207" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CheckFailure::CheckFailure(UtestShell *, const char *, signed int, const SimpleString &amp;, const SimpleString &amp;, const SimpleString &amp;)" desc="" line="223" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="231" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="228" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="229" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="230" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddExcludeGroupFilter(signed int, const char **, signed int &amp;)" desc="" line="174" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="176" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="177" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="178" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddExcludeNameFilter(signed int, const char **, signed int &amp;)" desc="" line="202" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="204" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="205" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="206" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddExcludeStrictGroupFilter(signed int, const char **, signed int &amp;)" desc="" line="181" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="183" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="184" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="185" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="186" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddExcludeStrictNameFilter(signed int, const char **, signed int &amp;)" desc="" line="209" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="212" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="213" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="214" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddGroupFilter(signed int, const char **, signed int &amp;)" desc="" line="161" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="163" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="164" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddNameFilter(signed int, const char **, signed int &amp;)" desc="" line="189" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="192" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddStrictGroupFilter(signed int, const char **, signed int &amp;)" desc="" line="167" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="170" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="171" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddStrictNameFilter(signed int, const char **, signed int &amp;)" desc="" line="195" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="197" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::AddTestToRunBasedOnVerboseOutput(signed int, const char **, signed int &amp;, const char *)" desc="" line="217" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="221" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="222" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="223" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="224" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="225" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="227" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="219" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="9" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="11" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::CommandLineArguments(signed int, const char **)" desc="" line="32" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::SetOutputType(signed int, const char **, signed int &amp;)" desc="" line="238" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="243" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="256" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="248" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="249" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="240" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="251" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="241" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="252" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="13" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="CommandLineArguments::SetPackageName(signed int, const char **, signed int &amp;)" desc="" line="230" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="232" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="233" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CommandLineArguments::SetRepeatCount(signed int, const char **, signed int &amp;)" desc="" line="137" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="143" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="144" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="145" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="139" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="141" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="CommandLineArguments::getGroupFilters() const" desc="" line="127" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="129" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::getNameFilters() const" desc="" line="132" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="134" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::getPackageName() const" desc="" line="274" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="276" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::getParameterField(signed int, const char **, signed int &amp;, const SimpleString &amp;)" desc="" line="152" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="154" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="155" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="156" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="157" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="158" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CommandLineArguments::getRepeatCount() const" desc="" line="122" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="124" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isColor() const" desc="" line="96" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isEclipseOutput() const" desc="" line="259" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="261" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isJUnitOutput() const" desc="" line="264" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="266" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isListingTestGroupAndCaseNames() const" desc="" line="106" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isListingTestGroupNames() const" desc="" line="101" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="103" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isRunIgnored() const" desc="" line="111" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isTeamCityOutput() const" desc="" line="269" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="271" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::isVerbose() const" desc="" line="91" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::parse(TestPlugin *)" desc="" line="51" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="66" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="67" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="71" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="54" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="77" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="79" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="59" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="61" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="65" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="49" covered="0"/>
		<counter type="BRANCH" missed="44" covered="0"/>
		<counter type="CALL" missed="34" covered="0"/>
		<counter type="MCDC" missed="22" covered="0"/>
	</method>
	<method name="CommandLineArguments::runTestsInSeperateProcess() const" desc="" line="116" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="118" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::usage() const" desc="" line="86" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="88" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineArguments::~CommandLineArguments()" desc="" line="37" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineArguments.cpp">
		<line nr="44" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="45" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="46" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="39" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="41" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::CommandLineTestRunner(signed int, const char **, TestRegistry *)" desc="" line="61" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineTestRunner::RunAllTests(signed int, char **)" desc="" line="35" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="37" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineTestRunner::RunAllTests(signed int, const char **)" desc="" line="40" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="45" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="46" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="54" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::createCompositeOutput(TestOutput *, TestOutput *)" desc="" line="148" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="150" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="151" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="152" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineTestRunner::createConsoleOutput()" desc="" line="143" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="145" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineTestRunner::createJUnitOutput(const SimpleString &amp;)" desc="" line="134" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="136" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="137" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="138" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::createTeamCityOutput()" desc="" line="129" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="131" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CommandLineTestRunner::initializeTestRun()" desc="" line="87" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="89" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="94" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="12" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::parseArguments(TestPlugin *)" desc="" line="156" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="165" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="166" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="167" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="168" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="158" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="159" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="160" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="171" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="164" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="13" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::runAllTests()" desc="" line="98" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="121" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="122" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="100" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="101" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="112" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="123" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="102" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="114" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="103" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="126" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="116" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="105" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="107" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="119" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="18" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::runAllTestsMain()" desc="" line="73" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="77" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="81" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CommandLineTestRunner::~CommandLineTestRunner()" desc="" line="67" source="D:\opensource\cpputest-master\src\CppUTest\CommandLineTestRunner.cpp">
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CompositeTestOutput::CompositeTestOutput()" desc="" line="269" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CompositeTestOutput::color()" desc="" line="334" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="336" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="337" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::flush()" desc="" line="376" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="378" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="379" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::print(const char *)" desc="" line="346" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="348" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="349" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::print(signed long)" desc="" line="352" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="354" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="355" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printBuffer(const char *)" desc="" line="340" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="342" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="343" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printCurrentGroupEnded(const TestResult &amp;)" desc="" line="322" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="324" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="325" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printCurrentGroupStarted(const UtestShell &amp;)" desc="" line="316" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="318" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="319" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printCurrentTestEnded(const TestResult &amp;)" desc="" line="310" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="312" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="313" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printCurrentTestStarted(const UtestShell &amp;)" desc="" line="304" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="306" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="307" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printDouble(double)" desc="" line="358" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="360" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="361" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printFailure(const TestFailure &amp;)" desc="" line="364" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="366" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="367" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printTestsEnded(const TestResult &amp;)" desc="" line="298" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="300" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="301" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::printTestsStarted()" desc="" line="292" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="294" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="295" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::setOutputOne(TestOutput *)" desc="" line="280" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="282" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="283" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CompositeTestOutput::setOutputTwo(TestOutput *)" desc="" line="286" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="288" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="289" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CompositeTestOutput::setProgressIndicator(const char *)" desc="" line="370" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="372" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="373" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::verbose()" desc="" line="328" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="330" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="331" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="CompositeTestOutput::~CompositeTestOutput()" desc="" line="274" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="276" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="277" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ConsoleTestOutput::ConsoleTestOutput()" desc="" line="113" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ConsoleTestOutput::flush()" desc="" line="260" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="262" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ConsoleTestOutput::printBuffer(const char *)" desc="" line="251" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="255" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="257" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="ConsoleTestOutput::~ConsoleTestOutput()" desc="" line="116" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ContainsFailure::ContainsFailure(UtestShell *, const char *, signed int, const SimpleString &amp;, const SimpleString &amp;, const SimpleString &amp;)" desc="" line="215" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CppUTestStore(void **)" desc="" line="135" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="141" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="142" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CrashOnAllocationAllocator::CrashOnAllocationAllocator()" desc="" line="167" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="CrashOnAllocationAllocator::alloc_memory(unsigned int, const char *, signed int)" desc="" line="176" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="178" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="179" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="CrashOnAllocationAllocator::setNumberToCrashOn(unsigned int)" desc="" line="171" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="173" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="DoublesEqualFailure::DoublesEqualFailure(UtestShell *, const char *, signed int, double, double, double, const SimpleString &amp;)" desc="" line="188" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="193" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="194" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="195" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="196" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="EqualsFailure::EqualsFailure(UtestShell *, const char *, signed int, const char *, const char *, const SimpleString &amp;)" desc="" line="172" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="177" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="175" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="EqualsFailure::EqualsFailure(UtestShell *, const char *, signed int, const SimpleString &amp;, const SimpleString &amp;, const SimpleString &amp;)" desc="" line="180" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="183" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="185" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ExecFunctionTest::ExecFunctionTest(ExecFunctionTestShell *)" desc="" line="647" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ExecFunctionTest::setup()" desc="" line="657" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="659" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="ExecFunctionTest::teardown()" desc="" line="662" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="664" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="ExecFunctionTest::testBody()" desc="" line="652" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="654" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="ExecFunctionTestShell::ExecFunctionTestShell(void (*)(), void (*)())" desc="" line="204" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\Utest.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ExecFunctionTestShell::createTest()" desc="" line="209" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\Utest.h">
		<line nr="209" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ExecFunctionTestShell::~ExecFunctionTestShell()" desc="" line="555" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FAIL_C_LOCATION(const char *, signed int)" desc="" line="83" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="85" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FAIL_TEXT_C_LOCATION(const char *, const char *, signed int)" desc="" line="78" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FailFailure::FailFailure(UtestShell *, const char *, signed int, const SimpleString &amp;)" desc="" line="234" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FailableMemoryAllocator::FailableMemoryAllocator(const char *, const char *, const char *)" desc="" line="252" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FailableMemoryAllocator::allocMemoryLeakNode(unsigned int)" desc="" line="291" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="293" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FailableMemoryAllocator::alloc_memory(unsigned int, const char *, signed int)" desc="" line="271" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="275" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="286" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="288" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="277" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="278" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="279" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="280" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="282" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="283" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="273" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="274" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="285" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="13" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="FailableMemoryAllocator::checkAllFailedAllocsWereDone()" desc="" line="296" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="298" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="299" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="300" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="301" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="302" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="304" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="306" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="307" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="FailableMemoryAllocator::clearFailedAllocs()" desc="" line="311" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="313" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="314" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="315" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="316" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="317" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="319" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="FailableMemoryAllocator::failAllocNumber(signed int)" desc="" line="257" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="259" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="260" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="261" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FailableMemoryAllocator::failNthAllocAt(signed int, const char *, signed int)" desc="" line="264" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="266" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="267" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="268" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="FeatureUnsupportedFailure::FeatureUnsupportedFailure(UtestShell *, const char *, signed int, const SimpleString &amp;, const SimpleString &amp;)" desc="" line="384" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="388" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="390" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HelperTestRunInfo::HelperTestRunInfo(UtestShell *, TestPlugin *, TestResult *)" desc="" line="102" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(unsigned long)" desc="" line="491" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="493" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(unsigned long long)" desc="" line="513" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="515" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(signed long long)" desc="" line="508" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="510" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(signed long)" desc="" line="476" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="478" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(void (*)())" desc="" line="523" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="525" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="HexStringFrom(signed char)" desc="" line="481" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="484" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="485" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="486" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="488" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="483" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="HexStringFrom(const void *)" desc="" line="518" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="520" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="IgnoredUtestShell::IgnoredUtestShell(const char *, const char *, const char *, signed int)" desc="" line="672" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="IgnoredUtestShell::IgnoredUtestShell()" desc="" line="668" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="IgnoredUtestShell::getMacroName() const" desc="" line="688" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="690" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="692" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="IgnoredUtestShell::runOneTest(TestPlugin *, TestResult &amp;)" desc="" line="695" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="697" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="699" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="700" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="703" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="IgnoredUtestShell::setRunIgnored()" desc="" line="706" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="708" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="IgnoredUtestShell::willRun() const" desc="" line="681" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="683" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="685" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="IgnoredUtestShell::~IgnoredUtestShell()" desc="" line="677" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestCaseResultNode::JUnitTestCaseResultNode()" desc="" line="36" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestGroupResult::JUnitTestGroupResult()" desc="" line="50" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::JUnitTestOutput()" desc="" line="71" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::closeFile()" desc="" line="280" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="282" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::createFileName(const SimpleString &amp;)" desc="" line="144" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="146" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="149" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="150" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::flush()" desc="" line="256" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::openFileForWrite(const SimpleString &amp;)" desc="" line="270" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="272" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::print(const char *)" desc="" line="248" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::print(signed long)" desc="" line="252" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printBuffer(const char *)" desc="" line="244" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printCurrentGroupEnded(const TestResult &amp;)" desc="" line="117" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="121" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="119" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printCurrentGroupStarted(const UtestShell &amp;)" desc="" line="103" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printCurrentTestEnded(const TestResult &amp;)" desc="" line="107" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printCurrentTestStarted(const UtestShell &amp;)" desc="" line="124" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="132" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="135" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="136" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="126" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="127" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="138" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="128" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="139" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="130" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="131" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="JUnitTestOutput::printFailure(const TestFailure &amp;)" desc="" line="262" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="264" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="265" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="266" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="JUnitTestOutput::printTestsEnded(const TestResult &amp;)" desc="" line="113" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::printTestsStarted()" desc="" line="99" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::resetTestGroupResult()" desc="" line="82" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="88" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="89" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="91" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="85" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="96" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="86" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="JUnitTestOutput::setPackageName(const SimpleString &amp;)" desc="" line="153" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="155" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="156" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="JUnitTestOutput::writeFailure(JUnitTestCaseResultNode *)" desc="" line="208" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="212" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="213" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="214" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="215" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="216" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="217" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="219" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="9" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="15" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeFileEnding()" desc="" line="224" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="227" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="228" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeProperties()" desc="" line="179" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeTestCases()" desc="" line="185" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="190" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="192" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="193" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="194" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="195" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="197" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="187" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="188" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="200" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="189" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="201" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="203" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="204" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="10" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="JUnitTestOutput::writeTestGroupToFile()" desc="" line="231" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="233" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="234" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="238" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="239" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeTestSuiteSummary()" desc="" line="165" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="176" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="167" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="168" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="170" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="171" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="173" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="174" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="175" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeToFile(const SimpleString &amp;)" desc="" line="275" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="277" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::writeXmlHeader()" desc="" line="160" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="JUnitTestOutput::~JUnitTestOutput()" desc="" line="76" source="D:\opensource\cpputest-master\src\CppUTest\JUnitTestOutput.cpp">
		<line nr="78" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="79" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="LocationToFailAllocNode::failAtAllocNumber(signed int, LocationToFailAllocNode *)" desc="" line="215" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="217" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="LocationToFailAllocNode::failNthAllocAt(signed int, const char *, signed int, LocationToFailAllocNode *)" desc="" line="221" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="223" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="224" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="225" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="LocationToFailAllocNode::init(LocationToFailAllocNode *)" desc="" line="241" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="243" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="246" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="LocationToFailAllocNode::shouldFail(signed int, const char *, signed int)" desc="" line="229" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="231" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="232" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="233" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="LongLongsEqualFailure::LongLongsEqualFailure(UtestShell *, const char *, signed int, signed long long, signed long long, const SimpleString &amp;)" desc="" line="275" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="288" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="289" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="278" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="290" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="280" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="281" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="282" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="283" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="285" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="LongsEqualFailure::LongsEqualFailure(UtestShell *, const char *, signed int, signed long, signed long, const SimpleString &amp;)" desc="" line="239" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="242" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="246" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="249" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="252" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemLeakScopedMutex::MemLeakScopedMutex()" desc="" line="42" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::ConstructMemoryLeakReport(MemLeakPeriod)" desc="" line="629" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="640" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="631" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="633" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="635" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="636" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="637" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::MemoryLeakDetector(MemoryLeakFailure *)" desc="" line="419" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="421" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="422" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="423" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="424" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="425" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::addMemoryCorruptionInformation(char *)" desc="" line="521" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="523" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="524" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="525" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::allocMemory(TestMemoryAllocator *, unsigned int, bool)" desc="" line="550" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="552" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::allocMemory(TestMemoryAllocator *, unsigned int, const char *, signed int, bool)" desc="" line="573" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="583" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="584" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="586" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="582" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::allocateMemoryWithAccountingInformation(TestMemoryAllocator *, unsigned int, const char *, signed int, bool)" desc="" line="555" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="557" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="558" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::checkForCorruption(MemoryLeakDetectorNode *, const char *, signed int, TestMemoryAllocator *, bool)" desc="" line="540" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="542" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="543" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="544" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="545" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="546" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="547" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::clearAllAccounting(MemLeakPeriod)" desc="" line="436" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="438" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::createMemoryLeakAccountingInformation(TestMemoryAllocator *, unsigned int, char *, bool)" desc="" line="567" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="569" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="570" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::deallocMemory(TestMemoryAllocator *, void *, bool)" desc="" line="611" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="613" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::deallocMemory(TestMemoryAllocator *, void *, const char *, signed int, bool)" desc="" line="596" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="598" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="600" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="601" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="602" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="603" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="605" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="606" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="607" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="9" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::disable()" desc="" line="457" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="459" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::disableAllocationTypeChecking()" desc="" line="462" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="464" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::enable()" desc="" line="452" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="454" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::enableAllocationTypeChecking()" desc="" line="467" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="469" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::getCurrentAllocationNumber()" desc="" line="472" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="474" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::getMutex()" desc="" line="477" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="479" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::getNodeFromMemoryPointer(char *, unsigned int)" desc="" line="492" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="494" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::invalidateMemory(char *)" desc="" line="514" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="516" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="517" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="518" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::markCheckingPeriodLeaksAsNonCheckingPeriod()" desc="" line="650" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="652" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="653" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="654" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="655" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::matchingAllocation(TestMemoryAllocator *, TestMemoryAllocator *)" desc="" line="533" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="535" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="536" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="537" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::reallocMemory(TestMemoryAllocator *, char *, unsigned int, const char *, signed int, bool)" desc="" line="616" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="620" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="621" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="622" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="624" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="626" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="618" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="619" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::reallocateMemoryAndLeakInformation(TestMemoryAllocator *, char *, unsigned int, const char *, signed int, bool)" desc="" line="504" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="510" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="511" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="506" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="507" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="509" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::reallocateMemoryWithAccountingInformation(TestMemoryAllocator *, char *, unsigned int, const char *, signed int, bool)" desc="" line="561" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="563" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="564" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::removeMemoryLeakInformationWithoutCheckingOrDeallocatingTheMemoryButDeallocatingTheAccountInformation(TestMemoryAllocator *, void *, bool)" desc="" line="590" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="592" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="593" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetector::report(MemLeakPeriod)" desc="" line="643" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="645" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="647" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::sizeOfMemoryWithCorruptionInfo(unsigned int)" desc="" line="487" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="489" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::startChecking()" desc="" line="441" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="443" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="444" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::stopChecking()" desc="" line="447" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="449" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::storeLeakInformation(MemoryLeakDetectorNode *, char *, unsigned int, TestMemoryAllocator *, const char *, signed int)" desc="" line="497" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="499" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="500" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="501" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::totalMemoryLeaks(MemLeakPeriod)" desc="" line="659" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="661" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::validMemoryCorruptionInformation(char *)" desc="" line="528" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="530" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetector::~MemoryLeakDetector()" desc="" line="428" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="430" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="432" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorList::MemoryLeakDetectorList()" desc="" line="141" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\MemoryLeakDetector.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorList::addNewNode(MemoryLeakDetectorNode *)" desc="" line="295" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="297" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="298" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorList::clearAllAccounting(MemLeakPeriod)" desc="" line="273" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="286" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="275" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="276" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="287" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="278" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="279" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="290" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="291" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="280" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="281" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="282" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="285" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorList::getFirstLeak(MemLeakPeriod)" desc="" line="340" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="342" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorList::getLeakFrom(MemoryLeakDetectorNode *, MemLeakPeriod)" desc="" line="333" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="335" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="336" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="337" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorList::getNextLeak(MemoryLeakDetectorNode *, MemLeakPeriod)" desc="" line="345" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="347" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorList::getTotalLeaks(MemLeakPeriod)" desc="" line="350" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="352" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="353" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="354" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="356" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorList::isInPeriod(MemoryLeakDetectorNode *, MemLeakPeriod)" desc="" line="268" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="270" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorList::removeNode(char *)" desc="" line="301" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="312" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="313" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="303" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="304" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="305" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="316" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="306" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="317" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="307" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="308" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="319" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="309" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorList::retrieveNode(char *)" desc="" line="322" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="330" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="324" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="325" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="326" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="327" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="328" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorNode::MemoryLeakDetectorNode()" desc="" line="119" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\MemoryLeakDetector.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorNode::init(char *, unsigned int, unsigned int, TestMemoryAllocator *, MemLeakPeriod, const char *, signed int)" desc="" line="255" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="257" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="258" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="259" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="260" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="261" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="262" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="263" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorTable::addNewNode(MemoryLeakDetectorNode *)" desc="" line="372" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="374" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorTable::clearAllAccounting(MemLeakPeriod)" desc="" line="366" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="368" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="369" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorTable::getFirstLeak(MemLeakPeriod)" desc="" line="395" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="397" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="398" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="399" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="401" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorTable::getNextLeak(MemoryLeakDetectorNode *, MemLeakPeriod)" desc="" line="404" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="410" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="411" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="412" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="414" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="406" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="407" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="408" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorTable::getTotalLeaks(MemLeakPeriod)" desc="" line="387" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="389" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="390" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="391" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="392" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakDetectorTable::hash(char *)" desc="" line="361" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="363" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorTable::removeNode(char *)" desc="" line="377" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="379" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakDetectorTable::retrieveNode(char *)" desc="" line="382" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="384" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakFailure::~MemoryLeakFailure()" desc="" line="45" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\MemoryLeakDetector.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::MemoryLeakOutputStringBuffer()" desc="" line="132" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addAllocationLocation(const char *, signed int, unsigned int, TestMemoryAllocator *)" desc="" line="137" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="139" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addDeallocationLocation(const char *, signed int, TestMemoryAllocator *)" desc="" line="142" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="144" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addErrorMessageForTooMuchLeaks()" desc="" line="203" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="205" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addMemoryLeakFooter(signed int)" desc="" line="208" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addMemoryLeakHeader()" desc="" line="198" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="200" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addNoMemoryLeaksMessage()" desc="" line="147" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="149" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::addWarningForUsingMalloc()" desc="" line="213" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="215" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::clear()" desc="" line="248" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="250" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::reportAllocationDeallocationMismatchFailure(MemoryLeakDetectorNode *, const char *, signed int, TestMemoryAllocator *, MemoryLeakFailure *)" desc="" line="223" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="225" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::reportDeallocateNonAllocatedMemoryFailure(const char *, signed int, TestMemoryAllocator *, MemoryLeakFailure *)" desc="" line="218" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::reportFailure(const char *, const char *, signed int, unsigned int, TestMemoryAllocator *, const char *, signed int, TestMemoryAllocator *, MemoryLeakFailure *)" desc="" line="233" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="238" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="239" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::reportMemoryCorruptionFailure(MemoryLeakDetectorNode *, const char *, signed int, TestMemoryAllocator *, MemoryLeakFailure *)" desc="" line="228" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="230" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::reportMemoryLeak(MemoryLeakDetectorNode *)" desc="" line="163" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="165" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="166" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="170" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="174" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="175" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::startMemoryLeakReporting()" desc="" line="152" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="154" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="157" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="160" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::stopMemoryLeakReporting()" desc="" line="178" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="188" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="189" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="180" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="193" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="194" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="185" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="186" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakOutputStringBuffer::toString()" desc="" line="243" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::FinalReport(signed int)" desc="" line="571" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="573" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="574" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="575" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakWarningPlugin::MemoryLeakWarningPlugin(const SimpleString &amp;, MemoryLeakDetector *)" desc="" line="532" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="540" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="535" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="537" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="538" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakWarningPlugin::areNewDeleteOverloaded()" desc="" line="419" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="422" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::destroyGlobalDetector()" desc="" line="501" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="503" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="504" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="505" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="506" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::destroyGlobalDetectorAndTurnOffMemoryLeakDetectionInDestructor(bool)" desc="" line="490" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="492" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::expectLeaksInTest(signed int)" desc="" line="527" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="529" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::getFirstPlugin()" desc="" line="512" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="514" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::getGlobalDetector()" desc="" line="471" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="473" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="474" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="477" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="480" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="482" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="MemoryLeakWarningPlugin::getGlobalFailureReporter()" desc="" line="485" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="487" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::getMemoryLeakDetector()" desc="" line="517" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="519" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::ignoreAllLeaksInTest()" desc="" line="522" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="524" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::postTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="557" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="562" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="563" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="564" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="566" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="567" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="568" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="559" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="560" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="MemoryLeakWarningPlugin::preTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="551" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="553" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="554" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::setGlobalDetector(MemoryLeakDetector *, MemoryLeakFailure *)" desc="" line="495" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="497" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="498" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::turnOffNewDeleteOverloads()" desc="" line="384" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="396" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="397" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="387" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="388" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="389" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="390" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="391" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="392" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="393" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="394" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="395" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::turnOnNewDeleteOverloads()" desc="" line="402" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="410" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="411" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="412" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="413" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="414" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="415" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="405" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="406" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="407" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="408" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="409" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::turnOnThreadSafeNewDeleteOverloads()" desc="" line="428" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="440" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="441" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="431" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="432" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="433" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="434" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="435" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="436" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="437" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="438" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="439" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningPlugin::~MemoryLeakWarningPlugin()" desc="" line="543" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="545" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="546" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="547" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="MemoryLeakWarningReporter::fail(char *)" desc="" line="461" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="463" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="464" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="MemoryLeakWarningReporter::~MemoryLeakWarningReporter()" desc="" line="457" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NormalTestTerminator::exitCurrentTest() const" desc="" line="623" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="626" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NormalTestTerminator::~NormalTestTerminator()" desc="" line="632" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullTestPlugin::NullTestPlugin()" desc="" line="154" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullTestPlugin::instance()" desc="" line="159" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullTestPlugin::runAllPostTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="169" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullTestPlugin::runAllPreTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="165" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullUnknownAllocator::NullUnknownAllocator()" desc="" line="194" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullUnknownAllocator::alloc_memory(unsigned int, const char *, signed int)" desc="" line="185" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="187" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullUnknownAllocator::defaultAllocator()" desc="" line="200" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="202" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="203" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="NullUnknownAllocator::free_memory(char *, const char *, signed int)" desc="" line="190" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="OutsideTestRunnerUTest::OutsideTestRunnerUTest()" desc="" line="62" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="OutsideTestRunnerUTest::getTestResult()" desc="" line="54" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="OutsideTestRunnerUTest::instance()" desc="" line="71" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="OutsideTestRunnerUTest::~OutsideTestRunnerUTest()" desc="" line="58" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ScopedMutexLock::ScopedMutexLock(SimpleMutex *)" desc="" line="52" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="ScopedMutexLock::~ScopedMutexLock()" desc="" line="58" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SetBooleanOnDestructorCall::SetBooleanOnDestructorCall(bool &amp;)" desc="" line="146" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SetBooleanOnDestructorCall::~SetBooleanOnDestructorCall()" desc="" line="150" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="152" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SetPointerPlugin::SetPointerPlugin(const SimpleString &amp;)" desc="" line="129" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="132" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SetPointerPlugin::postTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="145" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="149" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SignedBytesEqualFailure::SignedBytesEqualFailure(UtestShell *, const char *, signed int, signed char, signed char, const SimpleString &amp;)" desc="" line="311" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="321" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="324" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="325" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="314" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="326" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="316" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="317" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="318" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="319" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleMutex::Lock()" desc="" line="41" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleMutex::SimpleMutex()" desc="" line="31" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="33" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleMutex::Unlock()" desc="" line="46" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="48" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleMutex::~SimpleMutex()" desc="" line="36" source="D:\opensource\cpputest-master\src\CppUTest\SimpleMutex.cpp">
		<line nr="38" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::AtoI(const char *)" desc="" line="65" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="67" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="78" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="69" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="72" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="1" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="7"/>
		<counter type="BRANCH" missed="2" covered="4"/>
		<counter type="CALL" missed="0" covered="2"/>
		<counter type="MCDC" missed="3" covered="1"/>
	</method>
	<method name="SimpleString::MemCmp(const void *, const void *, unsigned int)" desc="" line="128" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="133" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="134" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="138" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="130" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="131" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="135" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="137" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="5"/>
		<counter type="BRANCH" missed="2" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="1"/>
	</method>
	<method name="SimpleString::SimpleString(const SimpleString &amp;)" desc="" line="164" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="166" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::SimpleString(const char *, unsigned int)" desc="" line="151" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="154" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="155" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="156" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="153" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="157" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="158" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="159" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="4"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::SimpleString(const char *)" desc="" line="141" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="143" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="147" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="144" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="2"/>
		<counter type="BRANCH" missed="1" covered="1"/>
		<counter type="CALL" missed="1" covered="1"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::StrCmp(const char *, const char *)" desc="" line="81" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="83" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="84" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="85" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="3"/>
		<counter type="BRANCH" missed="0" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="1"/>
	</method>
	<method name="SimpleString::StrLen(const char *)" desc="" line="88" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="90" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="91" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="92" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="4"/>
		<counter type="BRANCH" missed="0" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="0" covered="1"/>
	</method>
	<method name="SimpleString::StrNCmp(const char *, const char *, unsigned int)" desc="" line="95" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="100" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="97" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="98" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="3"/>
		<counter type="BRANCH" missed="0" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="2"/>
	</method>
	<method name="SimpleString::StrNCpy(char *, const char *, unsigned int)" desc="" line="103" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="111" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="105" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="107" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="109" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="5"/>
		<counter type="BRANCH" missed="0" covered="4"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="3"/>
	</method>
	<method name="SimpleString::StrStr(const char *, const char *)" desc="" line="114" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="118" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="119" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="116" ms="1" cs="1" mb="0" cb="0"/>
		<line nr="117" ms="1" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="4"/>
		<counter type="BRANCH" missed="3" covered="3"/>
		<counter type="CALL" missed="0" covered="2"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="SimpleString::ToLower(char)" desc="" line="123" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="125" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="0" covered="1"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::allocStringBuffer(unsigned int, const char *, signed int)" desc="" line="48" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="50" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="0" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::asCharString() const" desc="" line="286" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="288" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::at(unsigned int) const" desc="" line="377" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="379" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::contains(const SimpleString &amp;) const" desc="" line="178" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="180" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::containsNoCase(const SimpleString &amp;) const" desc="" line="183" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="185" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::copyToBuffer(char *, unsigned int) const" desc="" line="416" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="420" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="422" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="418" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::copyToNewBuffer(const char *, unsigned int)" desc="" line="406" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="410" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="411" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="412" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="413" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="408" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="6"/>
		<counter type="BRANCH" missed="1" covered="1"/>
		<counter type="CALL" missed="0" covered="3"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::count(const SimpleString &amp;) const" desc="" line="205" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="213" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="207" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="208" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="209" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::deallocStringBuffer(char *, const char *, signed int)" desc="" line="53" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::endsWith(const SimpleString &amp;) const" desc="" line="195" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="200" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="201" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="202" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="197" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="9" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="SimpleString::equalsNoCase(const SimpleString &amp;) const" desc="" line="312" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="314" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::find(char) const" desc="" line="382" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="384" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::findFrom(unsigned int, char) const" desc="" line="387" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="389" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="390" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="391" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="392" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::getEmptyString() const" desc="" line="58" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="61" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::getStringAllocator()" desc="" line="35" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="37" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="38" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="39" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="2"/>
		<counter type="BRANCH" missed="1" covered="1"/>
		<counter type="CALL" missed="0" covered="1"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::isDigit(char)" desc="" line="426" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="428" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::isEmpty() const" desc="" line="296" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="298" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::isSpace(char)" desc="" line="431" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="433" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::isUpper(char)" desc="" line="436" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="438" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::lowerCase() const" desc="" line="275" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="277" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="279" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="281" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="283" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::operator+(const SimpleString &amp;) const" desc="" line="323" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="325" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="326" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="327" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::operator+=(const char *)" desc="" line="335" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="341" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="342" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="343" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="344" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="337" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="338" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="339" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="340" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::operator+=(const SimpleString &amp;)" desc="" line="330" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="332" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::operator=(const SimpleString &amp;)" desc="" line="169" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="171" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="173" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="175" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::padStringsToSameLength(SimpleString &amp;, SimpleString &amp;, char)" desc="" line="347" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="354" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="355" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="356" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="357" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="349" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="350" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="351" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="7" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleString::replace(char, char)" desc="" line="234" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="238" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::replace(const char *, const char *)" desc="" line="242" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="270" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="260" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="271" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="261" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="262" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="251" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="252" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="265" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="266" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="255" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="256" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="267" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="246" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="257" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="249" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="21" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="10" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="SimpleString::setStringAllocator(TestMemoryAllocator *)" desc="" line="42" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="44" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::size() const" desc="" line="291" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="293" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::split(const SimpleString &amp;, SimpleStringCollection &amp;) const" desc="" line="216" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="222" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="224" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="225" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="227" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="229" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="219" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="230" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="13" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::startsWith(const SimpleString &amp;) const" desc="" line="188" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="190" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="192" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::subString(unsigned int, unsigned int) const" desc="" line="360" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="364" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="366" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="367" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="369" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="362" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::subString(unsigned int) const" desc="" line="372" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="374" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleString::subStringFromTill(char, char) const" desc="" line="395" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="397" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="398" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="400" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="401" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="403" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="SimpleString::~SimpleString()" desc="" line="302" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="304" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringBuffer::SimpleStringBuffer()" desc="" line="35" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="38" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringBuffer::add(const char *, ...)" desc="" line="47" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="49" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="51" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="54" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="SimpleStringBuffer::addMemoryDump(const void *, unsigned int)" desc="" line="61" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="66" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="89" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="91" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="71" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="77" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="78" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="79" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="85" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="86" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="65" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="32" covered="0"/>
		<counter type="BRANCH" missed="16" covered="0"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="9" covered="0"/>
	</method>
	<method name="SimpleStringBuffer::clear()" desc="" line="41" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="44" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringBuffer::reachedItsCapacity()" desc="" line="118" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringBuffer::resetWriteLimit()" desc="" line="113" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringBuffer::setWriteLimit(unsigned int)" desc="" line="107" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="111" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleStringBuffer::toString()" desc="" line="102" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="104" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringCollection::SimpleStringCollection()" desc="" line="747" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="750" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="749" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringCollection::allocate(unsigned int)" desc="" line="753" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="755" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="757" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringCollection::operator[](unsigned int)" desc="" line="771" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="773" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="774" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="775" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="778" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="SimpleStringCollection::size() const" desc="" line="766" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="768" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="SimpleStringCollection::~SimpleStringCollection()" desc="" line="761" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="763" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringBufferTestOutput::StringBufferTestOutput()" desc="" line="140" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringBufferTestOutput::flush()" desc="" line="151" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringBufferTestOutput::getOutput()" desc="" line="156" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<line nr="158" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringBufferTestOutput::printBuffer(const char *)" desc="" line="146" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestOutput.h">
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringBufferTestOutput::~StringBufferTestOutput()" desc="" line="265" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringEqualFailure::StringEqualFailure(UtestShell *, const char *, signed int, const char *, const char *, const SimpleString &amp;)" desc="" line="329" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="332" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="334" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="337" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="338" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="340" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="StringEqualNoCaseFailure::StringEqualNoCaseFailure(UtestShell *, const char *, signed int, const char *, const char *, const SimpleString &amp;)" desc="" line="344" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="352" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="353" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="355" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="347" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="349" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="10" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="StringFrom(const std::::cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &amp;)" desc="" line="624" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="626" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(void (*)())" desc="" line="471" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="473" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(const TestFilter &amp;)" desc="" line="103" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="105" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(bool)" desc="" line="441" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="443" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(unsigned int)" desc="" line="615" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="617" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(signed long long)" desc="" line="498" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="500" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(signed long)" desc="" line="461" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="463" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(char)" desc="" line="594" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="596" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(const char *)" desc="" line="446" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="448" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(signed int)" desc="" line="456" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="458" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(double, signed int)" desc="" line="584" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="586" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="587" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="588" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="589" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="591" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="StringFrom(unsigned long)" desc="" line="631" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="633" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(const SimpleString &amp;)" desc="" line="599" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="601" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(unsigned long long)" desc="" line="503" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="505" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFrom(const void *)" desc="" line="466" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="468" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFromBinary(const unsigned char *, unsigned int)" desc="" line="668" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="672" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="673" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="675" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="677" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="670" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="StringFromBinaryOrNull(const unsigned char *, unsigned int)" desc="" line="680" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="682" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFromBinaryWithSize(const unsigned char *, unsigned int)" desc="" line="685" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="694" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="687" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="688" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="689" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="690" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="692" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="StringFromBinaryWithSizeOrNull(const unsigned char *, unsigned int)" desc="" line="697" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="699" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFromFormat(const char *, ...)" desc="" line="604" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="610" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="611" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="612" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="606" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="607" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="608" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFromMaskedBits(unsigned long, unsigned long, unsigned int)" desc="" line="702" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="709" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="720" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="721" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="710" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="724" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="713" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="704" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="705" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="716" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="706" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="717" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="708" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="14" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="StringFromOrNull(const char *)" desc="" line="451" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="453" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="StringFromOrdinalNumber(unsigned int)" desc="" line="727" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="741" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="731" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="744" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="733" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="734" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="735" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="736" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="737" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="738" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="739" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="729" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::TeamCityTestOutput()" desc="" line="4" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TeamCityTestOutput::printCurrentGroupEnded(const TestResult &amp;)" desc="" line="45" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="48" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="51" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="52" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::printCurrentGroupStarted(const UtestShell &amp;)" desc="" line="37" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="39" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="41" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TeamCityTestOutput::printCurrentTestEnded(const TestResult &amp;)" desc="" line="25" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="33" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="34" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="27" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="28" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="30" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="31" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="32" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::printCurrentTestStarted(const UtestShell &amp;)" desc="" line="12" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="22" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="14" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="15" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="16" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="17" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="18" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="19" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="20" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="11" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::printEscaped(const char *)" desc="" line="55" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="66" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="67" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="59" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="61" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="65" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="18" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="7" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::printFailure(const TestFailure &amp;)" desc="" line="80" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<line nr="88" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="99" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="89" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="94" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="85" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="86" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="15" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="26" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TeamCityTestOutput::~TeamCityTestOutput()" desc="" line="8" source="D:\opensource\cpputest-master\src\CppUTest\TeamCityTestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::TestFailure(const TestFailure &amp;)" desc="" line="78" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::TestFailure(UtestShell *, const char *, signed int, const SimpleString &amp;)" desc="" line="63" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::TestFailure(UtestShell *, const SimpleString &amp;)" desc="" line="68" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::TestFailure(UtestShell *, const char *, signed int)" desc="" line="73" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::createButWasString(const SimpleString &amp;, const SimpleString &amp;)" desc="" line="133" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="135" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::createDifferenceAtPosString(const SimpleString &amp;, unsigned int, TestFailure::DifferenceFormat)" desc="" line="138" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="154" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="143" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="145" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="156" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="146" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="149" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="141" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="152" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="142" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="14" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="19" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::createUserText(const SimpleString &amp;)" desc="" line="160" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="165" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="166" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="167" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="163" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestFailure::getFailureLineNumber() const" desc="" line="108" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getFileName() const" desc="" line="88" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getMessage() const" desc="" line="118" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getTestFileName() const" desc="" line="93" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getTestLineNumber() const" desc="" line="113" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getTestName() const" desc="" line="98" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="100" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::getTestNameOnly() const" desc="" line="103" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="105" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::isInHelperFunction() const" desc="" line="128" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="130" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::isOutsideTestFile() const" desc="" line="123" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="125" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFailure::~TestFailure()" desc="" line="84" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::TestFilter(const SimpleString &amp;)" desc="" line="35" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="37" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::TestFilter(const char *)" desc="" line="40" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::TestFilter()" desc="" line="31" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::add(TestFilter *)" desc="" line="45" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="48" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::asString() const" desc="" line="90" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="100" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="94" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="96" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="8" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="TestFilter::getNext() const" desc="" line="51" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::invertMatching()" desc="" line="61" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::match(const SimpleString &amp;) const" desc="" line="66" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="71" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestFilter::operator!=(const TestFilter &amp;) const" desc="" line="85" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::operator==(const TestFilter &amp;) const" desc="" line="78" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="81" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestFilter::strictMatching()" desc="" line="56" source="D:\opensource\cpputest-master\src\CppUTest\TestFilter.cpp">
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestInstaller::TestInstaller(UtestShell &amp;, const char *, const char *, const char *, signed int)" desc="" line="714" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="720" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="716" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="717" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="718" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="719" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestInstaller::unDo()" desc="" line="727" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="729" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestInstaller::~TestInstaller()" desc="" line="723" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::TestMemoryAllocator(const char *, const char *, const char *)" desc="" line="113" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::allocMemoryLeakNode(unsigned int)" desc="" line="133" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="135" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::alloc_memory(unsigned int, const char *, signed int)" desc="" line="143" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="145" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="0" covered="1"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::alloc_name()" desc="" line="157" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="159" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::freeMemoryLeakNode(char *)" desc="" line="138" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::free_memory(char *, const char *, signed int)" desc="" line="148" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="150" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::free_name()" desc="" line="162" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="164" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::hasBeenDestroyed()" desc="" line="123" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="125" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::isOfEqualType(TestMemoryAllocator *)" desc="" line="128" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="130" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::name()" desc="" line="152" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="154" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestMemoryAllocator::~TestMemoryAllocator()" desc="" line="118" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="120" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="1"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::TestOutput()" desc="" line="47" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::color()" desc="" line="61" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::getWorkingEnvironment()" desc="" line="39" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="41" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestOutput::print(signed long)" desc="" line="71" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::print(const char *)" desc="" line="66" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printCurrentGroupEnded(const TestResult &amp;)" desc="" line="136" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printCurrentGroupStarted(const UtestShell &amp;)" desc="" line="132" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printCurrentTestEnded(const TestResult &amp;)" desc="" line="105" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="107" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestOutput::printCurrentTestStarted(const UtestShell &amp;)" desc="" line="93" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="101" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestOutput::printDouble(double)" desc="" line="76" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="78" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printEclipseErrorInFileOnLine(SimpleString, signed int)" desc="" line="231" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="233" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="234" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="238" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="7" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printErrorInFileOnLineFormattedForWorkingEnvironment(SimpleString, signed int)" desc="" line="223" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="225" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="228" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestOutput::printFailure(const TestFailure &amp;)" desc="" line="186" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="188" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="189" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="193" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestOutput::printFailureInTest(SimpleString)" desc="" line="209" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="212" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printFailureMessage(SimpleString)" desc="" line="215" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="217" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="219" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printFileAndLineForFailure(const TestFailure &amp;)" desc="" line="203" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="205" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="206" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printFileAndLineForTestAndFailure(const TestFailure &amp;)" desc="" line="196" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="200" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="8" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printProgressIndicator()" desc="" line="117" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="119" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestOutput::printTestRun(signed int, signed int)" desc="" line="175" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="177" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="178" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="179" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="180" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestOutput::printTestsEnded(const TestResult &amp;)" desc="" line="140" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="170" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="152" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="155" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="157" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="158" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="159" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="160" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="163" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="164" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="142" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="165" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="143" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="166" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="144" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="167" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="145" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="168" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="149" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="25" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="29" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="TestOutput::printTestsStarted()" desc="" line="128" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::printVisualStudioErrorInFileOnLine(SimpleString, signed int)" desc="" line="241" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="243" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="245" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="246" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="248" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="7" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::setProgressIndicator(const char *)" desc="" line="123" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="125" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::setWorkingEnvironment(TestOutput::WorkingEnvironment)" desc="" line="34" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="36" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::verbose()" desc="" line="56" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestOutput::~TestOutput()" desc="" line="52" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::TestPlugin(TestPlugin *)" desc="" line="36" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::TestPlugin(const SimpleString &amp;)" desc="" line="31" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::addPlugin(TestPlugin *)" desc="" line="47" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="49" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::disable()" desc="" line="103" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="105" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::enable()" desc="" line="108" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::getName()" desc="" line="77" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="79" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::getNext()" desc="" line="89" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="91" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::getPluginByName(const SimpleString &amp;)" desc="" line="82" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="85" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="86" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestPlugin::isEnabled()" desc="" line="113" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::parseAllArguments(signed int, const char **, signed int)" desc="" line="70" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestPlugin::parseAllArguments(signed int, char **, signed int)" desc="" line="65" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="67" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::parseArguments(signed int, const char **, signed int)" desc="" line="49" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestPlugin.h">
		<line nr="51" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::postTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="45" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestPlugin.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::preTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="41" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestPlugin.h">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestPlugin::removePluginByName(const SimpleString &amp;)" desc="" line="93" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="100" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="96" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestPlugin::runAllPostTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="59" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="61" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestPlugin::runAllPreTestAction(UtestShell &amp;, TestResult &amp;)" desc="" line="53" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestPlugin::~TestPlugin()" desc="" line="43" source="D:\opensource\cpputest-master\src\CppUTest\TestPlugin.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::TestRegistry()" desc="" line="31" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::addTest(UtestShell *)" desc="" line="41" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::countPlugins()" desc="" line="216" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="220" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="221" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="219" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestRegistry::countTests()" desc="" line="131" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="133" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::endOfGroup(UtestShell *)" desc="" line="126" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="128" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::findTestWithGroup(const SimpleString &amp;)" desc="" line="249" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="255" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="257" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="251" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="252" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestRegistry::findTestWithName(const SimpleString &amp;)" desc="" line="238" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="242" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="243" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="244" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="246" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="240" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="241" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="6" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestRegistry::getCurrentRegistry()" desc="" line="138" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="141" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::getCurrentRepetition()" desc="" line="175" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="177" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::getFirstPlugin()" desc="" line="199" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="201" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::getFirstTest()" desc="" line="225" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="227" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::getPluginByName(const SimpleString &amp;)" desc="" line="204" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="206" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::getTestWithNext(UtestShell *)" desc="" line="230" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="232" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="233" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="234" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestRegistry::installPlugin(TestPlugin *)" desc="" line="194" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="196" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::listTestGroupAndCaseNames(TestResult &amp;)" desc="" line="99" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="121" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="110" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="122" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="112" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="101" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="123" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="114" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="103" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="104" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="105" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="106" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="107" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="119" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="18" covered="0"/>
		<counter type="BRANCH" missed="8" covered="0"/>
		<counter type="CALL" missed="19" covered="0"/>
		<counter type="MCDC" missed="4" covered="0"/>
	</method>
	<method name="TestRegistry::listTestGroupNames(TestResult &amp;)" desc="" line="76" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="88" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="78" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="81" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="94" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="95" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="96" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="86" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="15" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="15" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="TestRegistry::removePluginByName(const SimpleString &amp;)" desc="" line="209" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="212" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="213" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="2" covered="0"/>
	</method>
	<method name="TestRegistry::resetPlugins()" desc="" line="189" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::runAllTests(TestResult &amp;)" desc="" line="46" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="67" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="48" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="60" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="61" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="73" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="52" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="22" covered="0"/>
		<counter type="BRANCH" missed="12" covered="0"/>
		<counter type="CALL" missed="13" covered="0"/>
		<counter type="MCDC" missed="6" covered="0"/>
	</method>
	<method name="TestRegistry::setCurrentRegistry(TestRegistry *)" desc="" line="144" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="146" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::setGroupFilters(const TestFilter *)" desc="" line="160" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::setNameFilters(const TestFilter *)" desc="" line="155" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="157" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::setRunIgnored()" desc="" line="165" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="167" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::setRunTestsInSeperateProcess()" desc="" line="170" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="172" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::testShouldRun(UtestShell *, TestResult &amp;)" desc="" line="180" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="184" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="185" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="TestRegistry::unDoLastAddTest()" desc="" line="149" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<line nr="151" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestRegistry::~TestRegistry()" desc="" line="37" source="D:\opensource\cpputest-master\src\CppUTest\TestRegistry.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::TestResult(TestOutput &amp;)" desc="" line="34" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::addFailure(const TestFailure &amp;)" desc="" line="74" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="77" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::countCheck()" desc="" line="90" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::countFilteredOut()" desc="" line="95" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::countIgnored()" desc="" line="100" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="102" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::countRun()" desc="" line="85" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::countTest()" desc="" line="80" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::currentGroupEnded(UtestShell *)" desc="" line="50" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="52" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::currentGroupStarted(UtestShell *)" desc="" line="44" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="46" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::currentTestEnded(UtestShell *)" desc="" line="67" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="70" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::currentTestStarted(UtestShell *)" desc="" line="56" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="59" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getCheckCount() const" desc="" line="70" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getCurrentGroupTotalExecutionTime() const" desc="" line="133" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="135" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getCurrentTestTotalExecutionTime() const" desc="" line="128" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="130" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getFailureCount() const" desc="" line="82" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getFilteredOutCount() const" desc="" line="74" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="76" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getIgnoredCount() const" desc="" line="78" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getRunCount() const" desc="" line="66" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="68" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getTestCount() const" desc="" line="62" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestResult.h">
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::getTotalExecutionTime() const" desc="" line="118" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::print(const char *)" desc="" line="62" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::setTotalExecutionTime(signed long)" desc="" line="123" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="125" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::testsEnded()" desc="" line="111" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="114" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::testsStarted()" desc="" line="105" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<line nr="107" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestResult::~TestResult()" desc="" line="40" source="D:\opensource\cpputest-master\src\CppUTest\TestResult.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTerminator::~TestTerminator()" desc="" line="619" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTerminatorWithoutExceptions::exitCurrentTest() const" desc="" line="636" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="638" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTerminatorWithoutExceptions::~TestTerminatorWithoutExceptions()" desc="" line="641" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::TestTestingFixture()" desc="" line="38" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="45" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="48" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="41" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::addTest(UtestShell *)" desc="" line="60" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::assertPrintContains(const SimpleString &amp;, const SimpleString &amp;)" desc="" line="121" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="123" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::assertPrintContains(const SimpleString &amp;)" desc="" line="111" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::checkTestFailsWithProperTestLocation(const char *, const char *, signed int)" desc="" line="38" source="D:\opensource\cpputest-master\src\CppUTest\TestTestingFixture.cpp">
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::getCheckCount()" desc="" line="96" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="98" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::getFailureCount()" desc="" line="91" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="93" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::getIgnoreCount()" desc="" line="101" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="103" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::getOutput()" desc="" line="116" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="118" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::getRunCount()" desc="" line="126" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="128" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::hasTestFailed()" desc="" line="106" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::lineExecutedAfterCheck()" desc="" line="33" source="D:\opensource\cpputest-master\src\CppUTest\TestTestingFixture.cpp">
		<line nr="35" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::runAllTests()" desc="" line="86" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="88" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::runTestWithMethod(void (*)())" desc="" line="80" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="82" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::setSetup(void (*)())" desc="" line="70" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="72" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::setTeardown(void (*)())" desc="" line="75" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="77" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::setTestFunction(void (*)())" desc="" line="65" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="67" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="TestTestingFixture::~TestTestingFixture()" desc="" line="51" source="D:\CT_TEST_src\cpp\CppUTest\include\CppUTest\TestTestingFixture.h">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="54" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UnsignedLongLongsEqualFailure::UnsignedLongLongsEqualFailure(UtestShell *, const char *, signed int, unsigned long long, unsigned long long, const SimpleString &amp;)" desc="" line="293" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="298" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="299" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="300" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="301" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="303" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="306" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="307" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="308" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="296" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UnsignedLongsEqualFailure::UnsignedLongsEqualFailure(UtestShell *, const char *, signed int, unsigned long, unsigned long, const SimpleString &amp;)" desc="" line="257" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="264" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="265" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="267" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="270" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="271" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="260" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="272" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="262" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="263" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="10" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="14" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="Utest::Utest()" desc="" line="561" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="Utest::run()" desc="" line="571" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="584" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="574" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="575" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="588" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="580" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="Utest::setup()" desc="" line="604" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="Utest::teardown()" desc="" line="612" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="Utest::testBody()" desc="" line="608" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="Utest::~Utest()" desc="" line="565" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::UtestShell()" desc="" line="134" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::UtestShell(const char *, const char *, const char *, signed int, UtestShell *)" desc="" line="144" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::UtestShell(const char *, const char *, const char *, signed int)" desc="" line="139" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::addTest(UtestShell *)" desc="" line="224" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="226" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="227" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::assertBinaryEqual(const void *, const void *, unsigned int, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="486" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="488" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="489" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="490" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="491" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="492" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="493" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertBitsEqual(unsigned long, unsigned long, unsigned long, unsigned int, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="496" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="498" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="499" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="500" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertCstrContains(const char *, const char *, const char *, const char *, signed int)" desc="" line="398" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="400" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="401" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="402" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="403" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="404" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="405" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertCstrEqual(const char *, const char *, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="368" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="374" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="375" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="370" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="371" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="372" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="373" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertCstrNEqual(const char *, const char *, unsigned int, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="378" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="385" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="380" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="381" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="382" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="383" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="384" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertCstrNoCaseContains(const char *, const char *, const char *, const char *, signed int)" desc="" line="408" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="410" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="411" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="412" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="413" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="414" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="415" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertCstrNoCaseEqual(const char *, const char *, const char *, const char *, signed int)" desc="" line="388" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="390" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="391" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="392" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="393" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="394" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="395" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="UtestShell::assertDoublesEqual(double, double, double, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="479" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="481" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="482" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="483" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertEquals(bool, const char *, const char *, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="503" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="505" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="506" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="507" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertFunctionPointersEqual(void (*)(), void (*)(), const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="472" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="474" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="475" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="476" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertLongLongsEqual(signed long long, signed long long, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="432" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="434" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="436" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="437" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertLongsEqual(signed long, signed long, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="418" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="420" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="421" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="422" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertPointersEqual(const void *, const void *, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="465" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="467" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="468" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="469" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertSignedBytesEqual(signed char, signed char, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="458" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="462" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="460" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="461" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertTrue(bool, const char *, const char *, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="355" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="357" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="358" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="359" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertUnsignedLongLongsEqual(unsigned long long, unsigned long long, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="445" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="447" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="449" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="450" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::assertUnsignedLongsEqual(unsigned long, unsigned long, const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="425" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="427" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="428" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="429" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::countCheck()" desc="" line="267" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="269" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::countTests()" desc="" line="230" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="232" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::crash()" desc="" line="172" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="174" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::createTest()" desc="" line="187" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="189" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::destroyTest(Utest *)" desc="" line="192" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="194" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::exitTest(const TestTerminator &amp;)" desc="" line="350" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="352" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::fail(const char *, const char *, signed int, const TestTerminator &amp;)" desc="" line="362" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="364" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="365" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::failWith(const TestFailure &amp;, const TestTerminator &amp;)" desc="" line="343" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="345" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="346" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="347" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::failWith(const TestFailure &amp;)" desc="" line="338" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="340" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getCurrent()" desc="" line="547" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="550" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="551" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="549" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::getFile() const" desc="" line="313" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="315" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getFormattedName() const" desc="" line="250" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="253" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="255" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="256" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="257" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="259" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="252" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getGroup() const" desc="" line="245" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getLineNumber() const" desc="" line="318" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="320" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getMacroName() const" desc="" line="235" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="237" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getName() const" desc="" line="240" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="242" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getNext() const" desc="" line="219" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="221" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::getTestResult()" desc="" line="540" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="542" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="543" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="544" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::hasFailed() const" desc="" line="262" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="264" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::isRunInSeperateProcess() const" desc="" line="277" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="279" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::match(const char *, const TestFilter *) const" desc="" line="323" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="330" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="325" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="327" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="328" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="UtestShell::print(const SimpleString &amp;, const char *, signed int)" desc="" line="522" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="524" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::print(const char *, const char *, signed int)" desc="" line="511" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="513" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="514" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="515" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="516" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="517" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="518" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="519" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="9" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::resetCrashMethod()" desc="" line="167" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::runOneTest(TestPlugin *, TestResult &amp;)" desc="" line="177" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="179" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="180" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="184" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="UtestShell::runOneTestInCurrentProcess(TestPlugin *, TestResult &amp;)" desc="" line="197" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="213" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="202" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="216" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="205" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="206" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="207" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="209" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="12" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="12" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setCrashMethod(void (*)())" desc="" line="162" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="164" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setCurrentTest(UtestShell *)" desc="" line="535" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="537" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setFileName(const char *)" desc="" line="293" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="295" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setGroupName(const char *)" desc="" line="303" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="305" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setLineNumber(signed int)" desc="" line="298" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="300" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setRunIgnored()" desc="" line="288" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setRunInSeperateProcess()" desc="" line="282" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="284" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setTestName(const char *)" desc="" line="308" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="310" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::setTestResult(TestResult *)" desc="" line="530" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="532" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::shouldRun(const TestFilter *, const TestFilter *) const" desc="" line="333" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="335" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::willRun() const" desc="" line="272" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="274" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="UtestShell::~UtestShell()" desc="" line="149" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<counter type="STATEMENT" missed="3" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="VStringFromFormat(const char *, char *)" desc="" line="641" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="660" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="662" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="652" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="664" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="643" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="665" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="654" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="645" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="646" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="657" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="658" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="647" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="659" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="648" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="649" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="15" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="addMarkerToString(const SimpleString &amp;, signed int)" desc="" line="49" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="59" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="51" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="52" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="calculateVoidPointerAlignedSize(unsigned int)" desc="" line="482" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakDetector.cpp">
		<line nr="484" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="checkedMalloc(unsigned int)" desc="" line="33" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="35" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="36" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="38" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="1"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="0" covered="1"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="countdown()" desc="" line="145" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="155" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="156" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="148" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="150" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="151" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="7" covered="0"/>
		<counter type="BRANCH" missed="6" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="cpputest_calloc(unsigned int, unsigned int)" desc="" line="130" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="132" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_calloc_location(unsigned int, unsigned int, const char *, signed int)" desc="" line="166" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="168" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="170" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="171" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="cpputest_free(void *)" desc="" line="140" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="142" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_free_location(void *, const char *, signed int)" desc="" line="179" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="181" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_free_location_with_leak_detection(void *, const char *, signed int)" desc="" line="120" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="122" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc(unsigned int)" desc="" line="125" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="127" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_count_reset()" desc="" line="97" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="99" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_get_count()" desc="" line="102" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="104" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_location(unsigned int, const char *, signed int)" desc="" line="159" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="163" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_location_with_leak_detection(unsigned int, const char *, signed int)" desc="" line="110" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="112" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_set_not_out_of_memory()" desc="" line="112" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="114" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_set_out_of_memory()" desc="" line="107" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="109" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="2" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_malloc_set_out_of_memory_countdown(signed int)" desc="" line="118" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="121" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="122" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="120" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="cpputest_realloc(void *, unsigned int)" desc="" line="135" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="137" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_realloc_location(void *, unsigned int, const char *, signed int)" desc="" line="174" source="D:\opensource\cpputest-master\src\CppUTest\TestHarness_c.cpp">
		<line nr="176" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="cpputest_realloc_location_with_leak_detection(void *, unsigned int, const char *, signed int)" desc="" line="115" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="117" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="crash_on_allocation_number(unsigned int)" desc="" line="445" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="451" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="447" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="448" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="449" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="450" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="defaultCrashMethod()" desc="" line="154" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="156" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="defaultMallocAllocator()" desc="" line="105" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="107" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="108" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="defaultNewAllocator()" desc="" line="61" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="64" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="defaultNewArrayAllocator()" desc="" line="83" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="85" ms="0" cs="1" mb="0" cb="0"/>
		<line nr="86" ms="0" cs="1" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="0" covered="2"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="doubles_equal(double, double, double)" desc="" line="33" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="35" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="36" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="38" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="43" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="6" covered="0"/>
		<counter type="MCDC" missed="5" covered="0"/>
	</method>
	<method name="getCurrentMallocAllocator()" desc="" line="94" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="96" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="getCurrentNewAllocator()" desc="" line="50" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="52" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="53" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="getCurrentNewArrayAllocator()" desc="" line="72" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="helperDoRunOneTestInCurrentProcess(void *)" desc="" line="109" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="111" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="113" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="114" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="115" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="117" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="helperDoRunOneTestSeperateProcess(void *)" desc="" line="120" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="122" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="124" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="125" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="126" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="127" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="helperDoTestBody(void *)" desc="" line="90" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="helperDoTestSetup(void *)" desc="" line="85" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="helperDoTestTeardown(void *)" desc="" line="95" source="D:\opensource\cpputest-master\src\CppUTest\Utest.cpp">
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_free(void *, const char *, signed int)" desc="" line="72" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="74" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="75" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_malloc(unsigned int, const char *, signed int)" desc="" line="67" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_operator_delete(void *)" desc="" line="233" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="235" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="236" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_operator_delete_array(void *)" desc="" line="239" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="242" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="241" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_operator_new(unsigned int)" desc="" line="195" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="198" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="199" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="197" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="mem_leak_operator_new_array(unsigned int)" desc="" line="214" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="216" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="217" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="218" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="mem_leak_operator_new_array_debug(unsigned int, const char *, signed int)" desc="" line="226" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="228" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="229" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="230" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="mem_leak_operator_new_array_nothrow(unsigned int)" desc="" line="221" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="223" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_operator_new_debug(unsigned int, const char *, signed int)" desc="" line="207" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="210" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="211" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="209" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="mem_leak_operator_new_nothrow(unsigned int)" desc="" line="202" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="204" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="mem_leak_realloc(void *, unsigned int, const char *, signed int)" desc="" line="78" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_free(void *, const char *, signed int)" desc="" line="95" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="97" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_malloc(unsigned int, const char *, signed int)" desc="" line="85" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="87" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_operator_delete(void *)" desc="" line="283" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="285" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_operator_delete_array(void *)" desc="" line="288" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="290" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_operator_new(unsigned int)" desc="" line="245" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="247" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="248" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="249" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="normal_operator_new_array(unsigned int)" desc="" line="264" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="266" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="267" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="268" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="normal_operator_new_array_debug(unsigned int, const char *, signed int)" desc="" line="276" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="278" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="279" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="280" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="normal_operator_new_array_nothrow(unsigned int)" desc="" line="271" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="273" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_operator_new_debug(unsigned int, const char *, signed int)" desc="" line="257" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="259" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="260" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="261" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="4" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="normal_operator_new_nothrow(unsigned int)" desc="" line="252" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="254" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="normal_realloc(void *, unsigned int, const char *, signed int)" desc="" line="90" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="92" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete(void *)" desc="" line="312" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="314" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete(void *, const char *, signed int)" desc="" line="317" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="319" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete(void *, unsigned int)" desc="" line="322" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="324" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete[](void *)" desc="" line="337" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="339" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete[](void *, const char *, signed int)" desc="" line="342" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="344" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator delete[](void *, unsigned int)" desc="" line="347" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="349" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new(unsigned int, const std::nothrow_t &amp;)" desc="" line="354" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="356" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new(unsigned int)" desc="" line="302" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="304" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new(unsigned int, const char *, signed int)" desc="" line="307" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="309" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new[](unsigned int, const char *, signed int)" desc="" line="332" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="334" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new[](unsigned int, const std::nothrow_t &amp;)" desc="" line="359" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="361" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator new[](unsigned int)" desc="" line="327" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="329" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator!=(const SimpleString &amp;, const SimpleString &amp;)" desc="" line="318" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="320" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator&lt;&lt;(TestOutput &amp;, signed long)" desc="" line="87" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="89" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="90" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator&lt;&lt;(TestOutput &amp;, const char *)" desc="" line="81" source="D:\opensource\cpputest-master\src\CppUTest\TestOutput.cpp">
		<line nr="83" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="84" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="operator==(const SimpleString &amp;, const SimpleString &amp;)" desc="" line="307" source="D:\opensource\cpputest-master\src\CppUTest\SimpleString.cpp">
		<line nr="309" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="removeAllPrintableCharactersFrom(const SimpleString &amp;)" desc="" line="34" source="D:\opensource\cpputest-master\src\CppUTest\TestFailure.cpp">
		<line nr="44" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="45" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="46" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="36" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="37" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="38" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="40" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="41" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="42" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="11" covered="0"/>
		<counter type="BRANCH" missed="4" covered="0"/>
		<counter type="CALL" missed="4" covered="0"/>
		<counter type="MCDC" missed="3" covered="0"/>
	</method>
	<method name="setCurrentMallocAllocator(TestMemoryAllocator *)" desc="" line="89" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="91" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="setCurrentMallocAllocatorToDefault()" desc="" line="100" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="102" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="setCurrentNewAllocator(TestMemoryAllocator *)" desc="" line="45" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="47" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="setCurrentNewAllocatorToDefault()" desc="" line="56" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="58" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="setCurrentNewArrayAllocator(TestMemoryAllocator *)" desc="" line="67" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="69" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="2"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="setCurrentNewArrayAllocatorToDefault()" desc="" line="78" source="D:\opensource\cpputest-master\src\CppUTest\TestMemoryAllocator.cpp">
		<line nr="80" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="1" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="1" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_free(void *, const char *, signed int)" desc="" line="53" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="55" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="56" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="57" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_malloc(unsigned int, const char *, signed int)" desc="" line="47" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="49" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="50" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_operator_delete(void *)" desc="" line="180" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="182" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="183" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="184" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_operator_delete_array(void *)" desc="" line="187" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="189" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="190" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="191" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="3" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="5" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new(unsigned int)" desc="" line="136" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="138" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="139" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="140" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="141" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new_array(unsigned int)" desc="" line="158" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="160" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="161" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="162" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="163" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new_array_debug(unsigned int, const char *, signed int)" desc="" line="172" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="176" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="177" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="174" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="175" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new_array_nothrow(unsigned int)" desc="" line="166" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="168" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="169" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new_debug(unsigned int, const char *, signed int)" desc="" line="150" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="154" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="155" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="152" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="153" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="5" covered="0"/>
		<counter type="BRANCH" missed="2" covered="0"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="1" covered="0"/>
	</method>
	<method name="threadsafe_mem_leak_operator_new_nothrow(unsigned int)" desc="" line="144" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="146" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="147" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	<method name="threadsafe_mem_leak_realloc(void *, unsigned int, const char *, signed int)" desc="" line="60" source="D:\opensource\cpputest-master\src\CppUTest\MemoryLeakWarningPlugin.cpp">
		<line nr="62" ms="1" cs="0" mb="0" cb="0"/>
		<line nr="63" ms="1" cs="0" mb="0" cb="0"/>
		<counter type="STATEMENT" missed="2" covered="0"/>
		<counter type="BRANCH" missed="3" covered="2"/>
		<counter type="CALL" missed="3" covered="0"/>
		<counter type="MCDC" missed="3" covered="2"/>
	</method>
	
    <counter type="STATEMENT" missed="1033" covered="956"/>
    <counter type="BRANCH" missed="268" covered="422"/>
    <counter type="CALL" missed="334" covered="916"/>
    <counter type="MCDC" missed="181" covered="229"/>
</report>
